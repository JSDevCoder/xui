<template>
	<view class="container">
		<Statusbar bg-color="rgba(0, 0, 0, .4)"></Statusbar>
		<form @submit="submitForm" @reset="resetForm">
			<view class="form">
				<view class="form-item">
					<view class="form-item-label">手机号</view>
					<input class="form-item-input" type="number" name="mobile" v-model="mobile" placeholder="请输入手机号" />
				</view>
				<view class="form-item">
					<view class="form-item-label">密码</view>
					<input class="form-item-input" type="text" password="true" name="password" v-model="password" placeholder="请输入密码" />
				</view>
				
				<button class="submit" form-type="submit">登录</button>
			</view>
		</form>
	</view>
</template>

<script>
	import tools from '../../common/tools.js'
	import service from '../../common/service.js'
	import Statusbar from '../../components/navbar/Statusbar.nvue'
	export default {
		data() {
			return {
				mobile: '15291985843',
				password: '123456'
			};
		},
		
		components: {
			Statusbar
		},

		onLoad() {
			
		},

		methods: {
			
			verifyForm(data) {
				const mobile = data.mobile || '';
				const password = data.password || '';
				if(tools.isEmpty(mobile)){
					uni.showToast({
						title: '手机号不能为空',
						icon: 'none',
						duration: 2000,
						position: 'bottom'
					});
					return false;
				}
				
				if(!tools.isMobile(mobile)){
					uni.showToast({
						title: '手机号格式输入有误',
						icon: 'none',
						duration: 2000,
						position: 'bottom'
					});
					return false;
				}
				
				if(tools.isEmpty(password)){
					uni.showToast({
						title: '密码不能为空',
						icon: 'none',
						duration: 2000,
						position: 'bottom'
					});
					return false;
				}
				
				return true;
			},
			
			submitForm(e) {
				const data = e.detail.value;
				if(!this.verifyForm(data)) return;
				service.login(data.mobile, data.password).then(res => {
					if(res.code === 1){
						const token = res.data.token;
						uni.setStorageSync('token', token);
						uni.showToast({
							title: res.msg,
							icon: 'none',
							duration: 2000,
							position: 'bottom'
						});
						setTimeout(() => {
							uni.redirectTo({
								url: '/pages/index/index'
							});
						}, 800)
					}else{
						service.statusCodeHandle(res.code, res.msg);
					}
				});
			},
		}
	}
</script>

<style lang="less" scoped>
	
</style>
